services:
  frontend:
    build:
      context: ./src/frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./src/frontend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: src/backend/Dockerfile
    ports:
      - "5269:5269"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_URLS=http://+:5269
      - ConnectionStrings__DefaultConnection=Server=db;Database=WindSurfDaGet;User=sa;Password=MyStrongPassword123#;TrustServerCertificate=True
    volumes:
      - ./src/backend:/app/src/backend
      - /app/src/backend/WindSurfDaGet.Api/bin
      - /app/src/backend/WindSurfDaGet.Api/obj
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:5269/health || exit 1
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 60s

  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      - ACCEPT_EULA=Y
      - MSSQL_SA_PASSWORD=MyStrongPassword123#
      - SA_PASSWORD=MyStrongPassword123#
    ports:
      - "1433:1433"
    volumes:
      - sqldata:/var/opt/mssql
    networks:
      - app-network
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "MyStrongPassword123#" -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

volumes:
  sqldata:
    name: windsurfdaget-sqldata

networks:
  app-network:
    name: windsurfdaget-network
    driver: bridge
